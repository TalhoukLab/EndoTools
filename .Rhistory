replace(emdb$mmr_ihc_2, emdb$mmr_ihc_2 == "intact", 1)
emdb$mmr_ihc_2 == "intact"
sample(emdb$mmr_ihc_2 == "intact", size = 5)
sample(emdb$mmr_ihc_2 == "intact", size = 5)
which(emdb$mmr_ihc_2 == "intact")
sample(which(emdb$mmr_ihc_2 == "intact"), n = 5)
sample(which(emdb$mmr_ihc_2 == "intact"), size = 5)
sample(which(emdb$mmr_ihc_2 == "intact"), size = 5)
replace(emdb$mmr_ihc_2, sample(which(emdb$mmr_ihc_2 == "intact"), size = 5), "deficient")
replace(emdb$mmr_ihc_2, sample(which(emdb$mmr_ihc_2 == "intact"), size = 5), "deficient") %>% table()
emdb$mmr_ihc_2 %>% table
emdb$mmr_ihc_2 %>% table
replace(emdb$mmr_ihc_2, sample(which(emdb$mmr_ihc_2 == "intact"), size = 5), "deficient") %>% table()
emdb <- tibble(
stage_full = sample(
x = c("I", "IA", "IB", "IC", "II", "IIA", "IIB", "III", "IIIA", "IIIB",
"IIIC", "IIIC1", "IIIC2", "IV", "IVA", "IVB"),
size = n,
replace = TRUE,
prob = c(
0.05, 0.47, 0.14, 0.01, 0.06, 0.01, 0.01, 0.05,
0.04, 0.01, 0.03, 0.03, 0.01, 0.06, 0.01, 0.01
)
),
stage = fct_collapse(
stage_full,
I = c("I", "IA", "IB", "IC"),
II = c("II", "IIA", "IIB"),
III = c("III", "IIIA", "IIIB", "IIIC", "IIIC1", "IIIC2"),
IV = c("IV", "IVA", "IVB")
),
grade_rev = sample(
x = c("grade 1", "grade 2", "grade 3"),
size = n,
replace = TRUE,
prob = c(0.4, 0.15, 0.45)
),
hist_rev_gr = sample(
x = c("endometrioid", "non-endometrioid"),
size = n,
replace = TRUE,
prob = c(0.7, 0.3)
),
hist = sample(
x = c(
"adenocarcinoma, NOS", "carcinosarcoma (MMMT)",
"clear cell", "dedifferentiated", "endometrioid", "endometrioid (squamous)",
"endometrioid (villoglandular)", "high grade NOS", "large cell neuroendocrine",
"mixed endometrioid and clear cell", "mixed endometrioid and mucinous",
"mixed endometrioid and serous", "mixed endometrioid and undifferentiated",
"mixed endometrioid, clear cell and mucinous", "mixed serous and carcinosarcoma",
"mixed serous and clear cell", "mucinous", "other", "serous",
"small cell", "undifferentiated"
),
size = n,
replace = TRUE,
prob = c(
c(0.003, 0.005, 0.079, 0.003, 0.68, 0.004, 0.003, 0.003, 0.001,
0.004, 0.001, 0.014, 0.001, 0.001, 0.003, 0.005, 0.001, 0.003,
0.173, 0.004, 0.009)
)
),
myo = sample(
x = c("none", "1-50%", ">50%"),
size = n,
replace = TRUE,
prob = c(0.2, 0.4, 0.4)
),
lvi = sample(
x = c("negative", "positive"),
size = n,
replace = TRUE,
prob = c(0.7, 0.3)
),
mmr_ihc_2 = sample(
x = c("intact", "deficient"),
size = n,
replace = TRUE,
prob = c(0.75, 0.25)
),
mmr_ihc_4 = replace(
mmr_ihc_2,
sample(which(mmr_ihc_2 == "intact"), size = 5),
"deficient"
)
)
emdb %>% count(mmr_ihc_2, mmr_ihc_4)
emdb.ca %>% count(pole_mut)
emdb.ca %>% caEndometrial::to_native_type() %>% count(pole_mut)
1163+39+88
c(1163, 39, 88) / 1290
sum(c(0.9, 0.03, 0.07))
emdb.bc2 %>% count(p53)
emdb.bc2 %>% count(p53_mut)
emdb.bc2 %>% bccaEndometrial::to_native_type() %>% count(p53_mut)
emdb.bc2 %>% bccaEndometrial::to_native_type()
emdb.bc2 %>% class
emdb.bc2 %>% count(p53_mut)
emdb.bc2 %>% count(p53)
emdb.bc2 %>% count(p53_b1v02)
emdb.ca %>% count(p53)
emdb.ca %>% count(p53, tp53_mut)
emdb.ca %>% count(p53, p53_b2v0134)
emdb.ca$p53 %>% str
emdb.ca$p53 %>% attributes
emdb.ca %>% count(p53, p53_b2v0134)
emdb.de %>% count(p53)
emdb.de %>% count(p53_b023v1_v1)
emdb.de %>% class
data("emdb.de")
emdb.de %>% class
emdb.ca %>% count(p53, p53_b2v0134)
emdb.ca %>% count(p53)
emdb.ca %>% mutate(p53 = gsub(" (subclonal", "", p53)) %>% count(p53)
emdb.ca %>% mutate(p53 = gsub(" (subclonal)", "", p53)) %>% count(p53)
emdb.ca %>% mutate(p53 = gsub("subclonal", "", p53)) %>% count(p53)
emdb.ca %>% mutate(p53 = gsub(" \\(subclonal\\)", "", p53)) %>% count(p53)
emdb.ca %>% mutate(p53 = gsub(" \\(subclonal\\)", "", p53)) %>% count(p53) %>% filter(p53 != "")
emdb.ca %>% mutate(p53 = gsub(" \\(subclonal\\)", "", p53)) %>% count(p53) %>% filter(p53 != "") %>% mutate(p = n / sum(n))
emdb.ca %>% mutate(p53 = gsub(" \\(subclonal\\)", "", p53)) %>% count(p53) %>% filter(p53 != "") %>% mutate(p = scales::number(n / sum(n)))
emdb.ca %>% mutate(p53 = gsub(" \\(subclonal\\)", "", p53)) %>% count(p53) %>% filter(p53 != "") %>% mutate(p = scales::number(n / sum(n), accuracy = 0.01))
sum(c(0.8, 0.03, 0.02, 0.01, 0.14))
emdb <- tibble(
stage_full = sample(
x = c("I", "IA", "IB", "IC", "II", "IIA", "IIB", "III", "IIIA", "IIIB",
"IIIC", "IIIC1", "IIIC2", "IV", "IVA", "IVB"),
size = n,
replace = TRUE,
prob = c(
0.05, 0.47, 0.14, 0.01, 0.06, 0.01, 0.01, 0.05,
0.04, 0.01, 0.03, 0.03, 0.01, 0.06, 0.01, 0.01
)
),
stage = fct_collapse(
stage_full,
I = c("I", "IA", "IB", "IC"),
II = c("II", "IIA", "IIB"),
III = c("III", "IIIA", "IIIB", "IIIC", "IIIC1", "IIIC2"),
IV = c("IV", "IVA", "IVB")
),
grade_rev = sample(
x = c("grade 1", "grade 2", "grade 3"),
size = n,
replace = TRUE,
prob = c(0.4, 0.15, 0.45)
),
hist_rev_gr = sample(
x = c("endometrioid", "non-endometrioid"),
size = n,
replace = TRUE,
prob = c(0.7, 0.3)
),
hist = sample(
x = c(
"adenocarcinoma, NOS", "carcinosarcoma (MMMT)",
"clear cell", "dedifferentiated", "endometrioid", "endometrioid (squamous)",
"endometrioid (villoglandular)", "high grade NOS", "large cell neuroendocrine",
"mixed endometrioid and clear cell", "mixed endometrioid and mucinous",
"mixed endometrioid and serous", "mixed endometrioid and undifferentiated",
"mixed endometrioid, clear cell and mucinous", "mixed serous and carcinosarcoma",
"mixed serous and clear cell", "mucinous", "other", "serous",
"small cell", "undifferentiated"
),
size = n,
replace = TRUE,
prob = c(
c(0.003, 0.005, 0.079, 0.003, 0.68, 0.004, 0.003, 0.003, 0.001,
0.004, 0.001, 0.014, 0.001, 0.001, 0.003, 0.005, 0.001, 0.003,
0.173, 0.004, 0.009)
)
),
myo = sample(
x = c("none", "1-50%", ">50%"),
size = n,
replace = TRUE,
prob = c(0.2, 0.4, 0.4)
),
lvi = sample(
x = c("negative", "positive"),
size = n,
replace = TRUE,
prob = c(0.7, 0.3)
),
mmr_ihc_2 = sample(
x = c("intact", "deficient"),
size = n,
replace = TRUE,
prob = c(0.75, 0.25)
),
mmr_ihc_4 = replace(
x = mmr_ihc_2,
list = sample(which(mmr_ihc_2 == "intact"), size = 5),
values = "deficient"
),
pole_mut = sample(
x = c("wild type", "mutated/non-path", "mutated"),
size = n,
replace = TRUE,
prob = c(0.9, 0.03, 0.07)
),
p53 = sample(
x = c("wild type", "null", "abnormal", "cytoplasmic", "overexpression"),
size = n,
replace = TRUE,
prob = c(0.8, 0.03, 0.02, 0.01, 0.14)
),
p53_mut = fct_collapse(
p53,
mutated = c("null", "abnormal", "cytoplasmic", "overexpression")
)
)
emdb %>% count(p53, p53_mut)
stage_2_or_higher
use_test("assign_esmo")
1
1
1
source("~/.active-rstudio-document", echo=TRUE)
use_data(emdb)
dim(emdb)
use_package_doc()
data("emdb")
devtools::load_all(".")
emdb$esmo2013 <- assign_esmo2013(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr
)
emdb$esmo2013 %>% table()
emdb %>% count(esmo2013)
emdb %>% dplyr::count(esmo2013)
emdb$esmo2013 == "low"
sum(emdb$esmo2013 == "low")
emdb %>% dplyr::count(esmo2013)
test_that("esmo2013 works", {
emdb$esmo2013 <- assign_esmo2013(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr
)
expect_equal(sum(emdb$esmo2013 == "low"), 168)
})
test_that("esmo2013 works", {
emdb$esmo2013 <- assign_esmo2013(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr
)
expect_equal(sum(emdb$esmo2013 == "low"), 168)
expect_equal(sum(emdb$esmo2013 == "intermediate"), 187)
expect_equal(sum(emdb$esmo2013 == "high"), 445)
})
emdb$esmo2016 <- assign_esmo2016(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
myo = emdb$myo,
lvi = emdb$lvi
)
emdb$esmo2016 %>% table
test_that("esmo2016 works", {
emdb$esmo2016 <- assign_esmo2016(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
myo = emdb$myo,
lvi = emdb$lvi
)
expect_equal(sum(emdb$esmo2013 == "low"), 88)
expect_equal(sum(emdb$esmo2013 == "intermediate"), 56)
expect_equal(sum(emdb$esmo2013 == "high-intermediate"), 174)
expect_equal(sum(emdb$esmo2013 == "high"), 464)
expect_equal(sum(emdb$esmo2013 == "advanced"), 12)
expect_equal(sum(emdb$esmo2013 == "metastatic"), 6)
expect_equal(sum(emdb$esmo2013 == "high"), 445)
})
test_that("esmo2016 works", {
emdb$esmo2016 <- assign_esmo2016(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
myo = emdb$myo,
lvi = emdb$lvi
)
expect_equal(sum(emdb$esmo2016 == "low"), 88)
expect_equal(sum(emdb$esmo2016 == "intermediate"), 56)
expect_equal(sum(emdb$esmo2016 == "high-intermediate"), 174)
expect_equal(sum(emdb$esmo2016 == "high"), 464)
expect_equal(sum(emdb$esmo2016 == "advanced"), 12)
expect_equal(sum(emdb$esmo2016 == "metastatic"), 6)
})
emdb$esmo2020 <- assign_esmo2020(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
hist = emdb$hist,
myo = emdb$myo,
lvi = emdb$lvi
)
emdb$esmo2020 %>% table
test_that("esmo2010 works", {
emdb$esmo2020 <- assign_esmo2020(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
hist = emdb$hist,
myo = emdb$myo,
lvi = emdb$lvi
)
expect_equal(sum(emdb$esmo2016 == "low"), 110)
expect_equal(sum(emdb$esmo2016 == "intermediate"), 124)
expect_equal(sum(emdb$esmo2016 == "high-intermediate"), 170)
expect_equal(sum(emdb$esmo2016 == "high"), 153)
expect_equal(sum(emdb$esmo2016 == "advanced"), 45)
expect_equal(sum(emdb$esmo2016 == "metastatic"), 6)
})
test_that("esmo2010 works", {
emdb$esmo2020 <- assign_esmo2020(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
hist = emdb$hist,
myo = emdb$myo,
lvi = emdb$lvi
)
expect_equal(sum(emdb$esmo2020 == "low"), 110)
expect_equal(sum(emdb$esmo2020 == "intermediate"), 124)
expect_equal(sum(emdb$esmo2020 == "high-intermediate"), 170)
expect_equal(sum(emdb$esmo2020 == "high"), 153)
expect_equal(sum(emdb$esmo2020 == "advanced"), 45)
expect_equal(sum(emdb$esmo2020 == "metastatic"), 6)
})
test_that("esmo2010 works", {
emdb$esmo2020 <- assign_esmo2020(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
hist = emdb$hist,
myo = emdb$myo,
lvi = emdb$lvi
)
expect_equal(sum(emdb$esmo2020 == "low"), 110)
expect_equal(sum(emdb$esmo2020 == "intermediate"), 124)
expect_equal(sum(emdb$esmo2020 == "high-intermediate"), 170)
expect_equal(sum(emdb$esmo2020 == "high"), 153)
expect_equal(sum(emdb$esmo2020 == "advanced"), 45)
expect_equal(sum(emdb$esmo2020 == "metastatic"), 6)
})
emdb$esmo2020 <- assign_esmo2020(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
hist = emdb$hist,
myo = emdb$myo,
lvi = emdb$lvi
)
emdb$esmo2020 %>% table
sum(emdb$esmo2020 == "low")
emdb %>% count(esmo2020)
emdb %>% dplyr::count(esmo2020)
emdb %>% dplyr::count(esmo2016)
emdb %>% dplyr::count(esmo2020)
test_that("esmo2010 works", {
emdb$esmo2020 <- assign_esmo2020(
stage = emdb$stage_full,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr,
hist = emdb$hist,
myo = emdb$myo,
lvi = emdb$lvi
)
expect_equal(sum(emdb$esmo2020 == "low", na.rm = TRUE), 110)
expect_equal(sum(emdb$esmo2020 == "intermediate", na.rm = TRUE), 124)
expect_equal(sum(emdb$esmo2020 == "high-intermediate", na.rm = TRUE), 170)
expect_equal(sum(emdb$esmo2020 == "high", na.rm = TRUE), 153)
expect_equal(sum(emdb$esmo2020 == "advanced", na.rm = TRUE), 45)
expect_equal(sum(emdb$esmo2020 == "metastatic", na.rm = TRUE), 6)
})
use_test("assign_promise")
emdb$promise2015 <- assign_promise2015(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53
)
library(dplyr)
emdb %>% count(promise2015)
test_that("promise2015 works", {
emdb$promise2015 <- assign_promise2015(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53
)
expect_equal(sum(emdb$promise2015 == "MMRd"), 213)
expect_equal(sum(emdb$promise2015 == "POLEmut"), 62)
expect_equal(sum(emdb$promise2015 == "p53abn"), 125)
expect_equal(sum(emdb$promise2015 == "NSMP/p53wt"), 400)
})
emdb$promise2019 <- assign_promise2019(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53
)
emdb %>% count(promise2019)
test_that("promise2019 works", {
emdb$promise2019 <- assign_promise2019(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53
)
expect_equal(sum(emdb$promise2019 == "POLEmut"), 49)
expect_equal(sum(emdb$promise2019 == "MMRd"), 204)
expect_equal(sum(emdb$promise2019 == "p53abn"), 129)
expect_equal(sum(emdb$promise2019 == "NSMP/p53wt"), 418)
})
emdb$promisepoor <- assign_promisepoor(
mmr2 = emdb$mmr_ihc_2,
mmr4 = emdb$mmr_ihc_4,
pole = emdb$pole_mut,
p53 = emdb$p53,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr
)
emdb %>% count(promisepoor)
test_that("promisepoor works", {
emdb$promisepoor <- assign_promisepoor(
mmr2 = emdb$mmr_ihc_2,
mmr4 = emdb$mmr_ihc_4,
pole = emdb$pole_mut,
p53 = emdb$p53,
grade = emdb$grade_rev,
hist_gr = emdb$hist_rev_gr
)
expect_equal(sum(emdb$promisepoor == "Low-Risk"), 162)
expect_equal(sum(emdb$promisepoor == "POLEmut"), 36)
expect_equal(sum(emdb$promisepoor == "MMRd"), 204)
expect_equal(sum(emdb$promisepoor == "p53abn"), 129)
expect_equal(sum(emdb$promisepoor == "NSMP/p53wt"), 269)
})
test_that("p53 can be used raw or consolidated", {
emdb$promise2015_v1 <- assign_promise2015(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53
)
emdb$promise2015_v2 <- assign_promise2015(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53_mut
)
expect_identical(emdb$promise2015_v1, promise2015_v2)
})
test_that("p53 can be used raw or consolidated", {
emdb$promise2015_v1 <- assign_promise2015(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53
)
emdb$promise2015_v2 <- assign_promise2015(
mmr = emdb$mmr_ihc_2,
pole = emdb$pole_mut,
p53 = emdb$p53_mut
)
expect_identical(emdb$promise2015_v1, emdb$promise2015_v2)
})
use_test("assign_mmr")
library(bccaEndometrial)
data("emdb.bc2")
emdb.bc2 %>% count(msh6)
815+51+4
815/870
emdb.bc2 %>% count(pms2)
749/870
emdb.bc2 %>% count(mlh1)
517/870
emdb.bc2 %>% count(msh2)
source("~/BCCRC/Repositories/EndoTools/data-raw/create_emdb.R", echo=TRUE)
emdb$mmr2 <- assign_mmr2(
msh6 = emdb$msh6,
pms2 = emdb$pms2
)
emdb %>% count(mmr2)
emdb$mmr4 <- assign_mmr4(
msh6 = emdb$msh6,
pms2 = emdb$pms2,
mlh1 = emdb$mlh1,
msh2 = emdb$msh2
)
emdb %>% count(mmr4)
data("emdb")
test_that("mmr2 works", {
emdb$mmr2 <- assign_mmr2(
msh6 = emdb$msh6,
pms2 = emdb$pms2
)
expect_equal(sum(emdb$mmr2 == "intact"), 578)
expect_equal(sum(emdb$mmr2 == "deficient"), 222)
})
test_that("mmr4 works", {
emdb$mmr4 <- assign_mmr4(
msh6 = emdb$msh6,
pms2 = emdb$pms2,
mlh1 = emdb$mlh1,
msh2 = emdb$msh2
)
expect_equal(sum(emdb$mmr2 == "intact"), 195)
expect_equal(sum(emdb$mmr2 == "deficient"), 605)
})
use_data_raw()
use_github_action("test-coverage")
use_coverage()
pkgdown:::build_site_external()
use_pkgdown_github_pages()
